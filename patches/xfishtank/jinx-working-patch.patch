diff --git xfishtank-clean/src/ixpm.c xfishtank-workdir/src/ixpm.c
index 83facf7..88e7b05 100644
--- xfishtank-clean/src/ixpm.c
+++ xfishtank-workdir/src/ixpm.c
@@ -1,32 +1,33 @@
 /* -copyright-
-#-# Copyright © 2021 Eric Bina, Dave Black, TJ Phan, 
+#-# Copyright © 2021 Eric Bina, Dave Black, TJ Phan,
 #-#    Vincent Renardias, Jim Rees, Willem Vermin
-#-# 
-#-# Permission is hereby granted, free of charge, to any person 
-#-# obtaining a copy of this software and associated documentation 
-#-# files (the “Software”), to deal in the Software without 
-#-# restriction, including without limitation the rights to use, 
-#-# copy, modify, merge, publish, distribute, sublicense, and/or 
-#-# sell copies of the Software, and to permit persons to whom 
-#-# the Software is furnished to do so, subject to the following 
+#-#
+#-# Permission is hereby granted, free of charge, to any person
+#-# obtaining a copy of this software and associated documentation
+#-# files (the “Software”), to deal in the Software without
+#-# restriction, including without limitation the rights to use,
+#-# copy, modify, merge, publish, distribute, sublicense, and/or
+#-# sell copies of the Software, and to permit persons to whom
+#-# the Software is furnished to do so, subject to the following
 #-# conditions:
-#-# 
-#-# The above copyright notice and this permission notice shall 
+#-#
+#-# The above copyright notice and this permission notice shall
 #-# be included in all copies or substantial portions of the Software.
-#-# 
-#-# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, 
-#-# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
-#-# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
-#-# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
-#-# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
-#-# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
-#-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
+#-#
+#-# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
+#-# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+#-# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+#-# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+#-# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+#-# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 #-# OTHER DEALINGS IN THE SOFTWARE.
-#-# 
+#-#
 */
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <strings.h>
 #include <assert.h>
 #include <gtk/gtk.h>
 #include "ixpm.h"
@@ -93,7 +94,7 @@ static void strrevert(char*s, size_t l)
 //  flop: if 1, reverse the data horizontally
 //  Extra: 0xff000000 is added to the pixmap data
 //
-int iXpmCreatePixmapFromData(Display *display, Drawable d, 
+int iXpmCreatePixmapFromData(Display *display, Drawable d,
       const char *data[], Pixmap *p, Pixmap *s, XpmAttributes *attr, int flop)
 {
    int rc, lines, i, ncolors, height, w;
@@ -143,7 +144,7 @@ int iXpmCreatePixmapFromData(Display *display, Drawable d,
       }
       printf("exiting\n");
       fflush(NULL);
-      abort();
+      //abort();
    }
    XAddPixel(ximage,0xff000000);
    if(p && ximage)
@@ -287,7 +288,7 @@ int xpmtobits(char *xpm[],unsigned char **bitsreturn, int *wreturn, int *hreturn
 	 if (k)
 	    bits[j++] = c>>(8-k);
       }
-   else  
+   else
       for (y=0; y<h; y++)      // big endian  NOT tested
       {
 	 int x,k=0;
@@ -318,7 +319,7 @@ int xpmtobits(char *xpm[],unsigned char **bitsreturn, int *wreturn, int *hreturn
 
 
 // given color and xmpdata **data of a monocolored picture like:
-// 
+//
 //XPM_TYPE *snow06_xpm[] = {
 ///* columns rows colors chars-per-pixel */
 //"3 3 2 1 ",
@@ -334,7 +335,7 @@ int xpmtobits(char *xpm[],unsigned char **bitsreturn, int *wreturn, int *hreturn
 // when wanteing to free out.
 void xpm_set_color(char **data, char ***out, int *lines, const char *color)
 {
-   int n;  
+   int n;
    sscanf(data[0],"%*d %d",&n);
    assert(n+3>0);
    *out = (char**)malloc(sizeof(char *)*(n+3));
diff --git xfishtank-clean/src/main.c xfishtank-workdir/src/main.c
index 6d9ec67..8cd262a 100644
--- xfishtank-clean/src/main.c
+++ xfishtank-workdir/src/main.c
@@ -1,28 +1,28 @@
 /* -copyright-
-#-# Copyright © 2021 Eric Bina, Dave Black, TJ Phan, 
+#-# Copyright © 2021 Eric Bina, Dave Black, TJ Phan,
 #-#    Vincent Renardias, Jim Rees, Willem Vermin
-#-# 
-#-# Permission is hereby granted, free of charge, to any person 
-#-# obtaining a copy of this software and associated documentation 
-#-# files (the “Software”), to deal in the Software without 
-#-# restriction, including without limitation the rights to use, 
-#-# copy, modify, merge, publish, distribute, sublicense, and/or 
-#-# sell copies of the Software, and to permit persons to whom 
-#-# the Software is furnished to do so, subject to the following 
+#-#
+#-# Permission is hereby granted, free of charge, to any person
+#-# obtaining a copy of this software and associated documentation
+#-# files (the “Software”), to deal in the Software without
+#-# restriction, including without limitation the rights to use,
+#-# copy, modify, merge, publish, distribute, sublicense, and/or
+#-# sell copies of the Software, and to permit persons to whom
+#-# the Software is furnished to do so, subject to the following
 #-# conditions:
-#-# 
-#-# The above copyright notice and this permission notice shall 
+#-#
+#-# The above copyright notice and this permission notice shall
 #-# be included in all copies or substantial portions of the Software.
-#-# 
-#-# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, 
-#-# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
-#-# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
-#-# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
-#-# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
-#-# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
-#-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
+#-#
+#-# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
+#-# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+#-# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+#-# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+#-# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+#-# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 #-# OTHER DEALINGS IN THE SOFTWARE.
-#-# 
+#-#
 */
 
 /*
@@ -82,8 +82,8 @@ extern unsigned char *ReadBitmap();
 
 /* typedefs for bubble and fish structures, also caddr_t (not used in X.h) */
 typedef struct _bubble {
-   float x; 
-   float y; 
+   float x;
+   float y;
    int   size;            // size of bubble
    float bstep;           // increment in placement
 } bubble;
@@ -93,7 +93,7 @@ typedef struct _fish {
    float y;
    int   direction;        // direction: 0: r->l
    int   frame;            // animation frames: 0 .. NUM_FRAMES
-   int   type; 
+   int   type;
    float fstep;            // increment in placement
    int   animtime;         // # drawings between change of frame
 } fish;
@@ -177,7 +177,7 @@ int     nomenu = 0;
 
 
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
-   parse command line 
+   parse command line
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 void parse(int argc, char *argv[])
 {
@@ -188,94 +188,94 @@ void parse(int argc, char *argv[])
    while (++p < argc)
    {
       P("argv[p] %s\n",argv[p]);
-      if (!strcmp(argv[p],"-b")) 
+      if (!strcmp(argv[p],"-b"))
       {
 	 CHECK;
 	 blimit = strtod(argv[p],NULL);
-      } 
-      else if (!strcmp(argv[p],"-f")) 
+      }
+      else if (!strcmp(argv[p],"-f"))
       {
 	 CHECK;
 	 flimit = strtod(argv[p],NULL);
-      } 
-      else if (!strcmp(argv[p],"-display")) 
+      }
+      else if (!strcmp(argv[p],"-display"))
       {
 	 CHECK;
 	 display_name = strdup(argv[p]);
-      } 
-      else if (!strcmp(argv[p],"-bc")) 
+      }
+      else if (!strcmp(argv[p],"-bc"))
       {
 	 CHECK;
 	 if(bcolorstring)
 	    free(bcolorstring);
 	 bcolorstring = strdup(argv[p]);
-      } 
-      else if (!strcmp(argv[p],"-bgc")) 
+      }
+      else if (!strcmp(argv[p],"-bgc"))
       {
 	 CHECK;
 	 if(bgcolorstring)
 	    free(bgcolorstring);
 	 bgcolorstring = strdup(argv[p]);
-      } 
-      else if (!strcmp(argv[p],"-double")) 
+      }
+      else if (!strcmp(argv[p],"-double"))
       {
 	 CHECK;
 	 WantXdbe = (strtod(argv[p],NULL)>0);
-      } 
-      else if (!strcmp(argv[p],"-speed")) 
+      }
+      else if (!strcmp(argv[p],"-speed"))
       {
 	 CHECK;
 	 speedfactor = (strtod(argv[p],NULL)/100.0);
-      } 
-      else if (!strcmp(argv[p],"-h")) 
+      }
+      else if (!strcmp(argv[p],"-h"))
       {
 	 Usage();
 	 Thanks();
-      } 
-      else if (!strcmp(argv[p],"-v")) 
+      }
+      else if (!strcmp(argv[p],"-v"))
       {
 	 printf("xfishtank version %s\n",VERSION);
 	 Thanks();
-      } 
-      else if (!strcmp(argv[p],"-defaults")) 
+      }
+      else if (!strcmp(argv[p],"-defaults"))
       {
 	 set_defaults();
-      } 
-      else if (!strcmp(argv[p],"-nomenu")) 
+      }
+      else if (!strcmp(argv[p],"-nomenu"))
       {
 	 nomenu = 1;
-      } 
-      else if (!strcmp(argv[p],"-root")) 
+      }
+      else if (!strcmp(argv[p],"-root"))
       {
 	 ForceRoot = 1;
-      } 
-      else if (!strcmp(argv[p],"--root")) 
+      }
+      else if (!strcmp(argv[p],"--root"))
       {
 	 ForceRoot = 1;
-      } 
-      else if (!strcmp(argv[p],"-window-id")) 
+      }
+      else if (!strcmp(argv[p],"-window-id"))
       {
 	 CHECK;
-	 UserWindow = strtod(argv[p],NULL); 
-      } 
-      else if (!strcmp(argv[p],"--window-id")) 
+	 UserWindow = strtod(argv[p],NULL);
+      }
+      else if (!strcmp(argv[p],"--window-id"))
       {
 	 CHECK;
-	 UserWindow = strtod(argv[p],NULL); 
-      } 
-      else if (!strcmp(argv[p],"-changelog")) 
+	 UserWindow = strtod(argv[p],NULL);
+      }
+      else if (!strcmp(argv[p],"-changelog"))
       {
 	 print_changelog();
 	 Thanks();
-      } 
+      }
 #ifdef SELFREP
-      else if (!strcmp(argv[p],"-selfrep")) 
+      else if (!strcmp(argv[p],"-selfrep"))
       {
 	 selfrep();
 	 exit(0);
-      } 
+      }
 #endif
-      else 
+      else
       {
 	 printf("Not understood: %s\n",argv[p]);
 	 Usage();
@@ -457,7 +457,7 @@ void init_pixmap()
 	 for (i=0; i<h+c+1; i++)
 	    printf("k i: %d %d %s\n",k,i,fishes[k][i]);
       }
-   for (k = 0; k < NUM_FISH; k++) 
+   for (k = 0; k < NUM_FISH; k++)
    {
       int i;
       for (i=0; i<2; i++)
@@ -477,7 +477,7 @@ void init_pixmap()
    }
 
    int i;
-   for (i = 1; i <= 8; i++) 
+   for (i = 1; i <= 8; i++)
       xbubbles[i] = XCreateBitmapFromData(Dpy, wid, (char *) xbBits[i], i, i);
 }
 
@@ -517,7 +517,7 @@ void initialize()
    GtkWidget   *gtkwin;
    XGetGeometry(Dpy,root_window,&root,
 	 &x, &y, &w, &h, &b, &depth);
-   gtkwin = gtk_window_new(GTK_WINDOW_TOPLEVEL); 
+   gtkwin = gtk_window_new(GTK_WINDOW_TOPLEVEL);
    gtk_window_set_title             (GTK_WINDOW(gtkwin),"Xfishtank-A");
    gtk_window_set_skip_taskbar_hint (GTK_WINDOW(gtkwin),TRUE);
    gtk_window_set_skip_pager_hint   (GTK_WINDOW(gtkwin),TRUE);
@@ -543,7 +543,7 @@ void initialize()
 	    1 /*fullscreen*/,
 	    1 /*sticky*/,
 	    1 /* below*/,
-	    1 /* dock*/ , 
+	    1 /* dock*/ ,
 	    NULL,
 	    &searchWin);
       if (HaveTrans)
@@ -557,7 +557,7 @@ void initialize()
 	 {
 	    char *a = DesktopSession;
 	    while (*a) { *a = toupper(*a); a++; }
-	    if (!strncmp(DesktopSession,"LXDE",4)) 
+	    if (!strncmp(DesktopSession,"LXDE",4))
 	    {
 	       Window w = largest_window_with_name(myxdo, "^pcmanfm$");
 	       if(w)
@@ -588,7 +588,7 @@ void initialize()
    vals.graphics_exposures = False;
    bgc = XCreateGC(Dpy, wid, GCForeground | GCBackground | GCGraphicsExposures, &vals);
 
-   for (i = 0; i < NUM_FISH; i++) 
+   for (i = 0; i < NUM_FISH; i++)
       for (j=0; j<2; j++)
 	 for (k=0; k<NUM_FRAMES; k++)
 	 {
@@ -679,18 +679,18 @@ void step_bubbles()
    (void)s;
    bubble *b;
 
-   for (i = 0; i < blimit; i++) 
+   for (i = 0; i < blimit; i++)
    {
       b = &binfo[i];
       s = b->size;
       /* clear */
       /*
-	 if ((b->y > 0) && (b->erased == 0)) 
+	 if ((b->y > 0) && (b->erased == 0))
 	 {
 	 erasebubble(b, s);
 	 }
 	 */
-      if ((b->y -= b->bstep) > 0) 
+      if ((b->y -= b->bstep) > 0)
       {
 	 double r = drand48();
 	 if (r < 0.25) {
@@ -723,21 +723,21 @@ void new_fish(fish *f0, int init)  // init 0: position at edge, else position at
 
    f->type = drand48() * NUM_FISH;
    fishtype *ft = &xfish[f->type][0][0];
-   for (i = 0, collide = 1; (i < 16) && (collide); i++) 
+   for (i = 0, collide = 1; (i < 16) && (collide); i++)
    {
       f->y = (height - ft->h) * drand48();
-      if ((f->fstep = smooth * width / (8.0 * (1.0 + 8*drand48()))) == 0) 
+      if ((f->fstep = smooth * width / (8.0 * (1.0 + 8*drand48()))) == 0)
 	 f->fstep = 1;
    }
-   if (drand48() < 0.5) 
+   if (drand48() < 0.5)
    {
       f->direction = 0;
       if (init)
 	 f->x = ft->w + drand48()*width;
       else
 	 f->x = width;
-   } 
-   else 
+   }
+   else
    {
       f->direction = 1;
       if (init)
@@ -754,7 +754,7 @@ void new_fish(fish *f0, int init)  // init 0: position at edge, else position at
 void remove_all_fishes()
 {
    int i;
-   for (i = 0; i < flimit; i++) 
+   for (i = 0; i < flimit; i++)
       erasefish(&finfo[i]);
    XFlush(Dpy);
 }
@@ -762,7 +762,7 @@ void remove_all_fishes()
 void remove_all_bubbles()
 {
    int i;
-   for (i = 0; i < blimit; i++) 
+   for (i = 0; i < blimit; i++)
       erasebubble(&binfo[i]);
    XFlush(Dpy);
 }
@@ -777,43 +777,43 @@ void move_fish()
    int i, y, done = 0;
    fish *f;
 
-   for (i = 0; i < flimit; i++) 
+   for (i = 0; i < flimit; i++)
    {
       f = &finfo[i];
       fishtype *ft = &xfish[f->type][f->direction][f->frame];
-      if (f->direction == 0) 
+      if (f->direction == 0)
 	 done = ((f->x -= speedfactor*f->fstep) < -ft->w);
-      else if (f->direction == 1) 
+      else if (f->direction == 1)
 	 done = ((f->x += speedfactor*f->fstep) > width);
 
       if(1) // spontaneous change direction now and then
-	 if (f->x > ft->w && f->x < width - 2*ft->w && drand48() < 0.001) 
+	 if (f->x > ft->w && f->x < width - 2*ft->w && drand48() < 0.001)
 	 {
 	    f->direction = 1-f->direction;
 	    P("direction: %d\n",f->direction);
 	 }
-      if (1) 
+      if (1)
       {
-	 if (!done) 
+	 if (!done)
 	 {
 	    double r = drand48();
-	    if (r < 0.25) 
+	    if (r < 0.25)
 	       y = f->fstep / 4;
-	    else if (r > 0.75) 
+	    else if (r > 0.75)
 	       y = f->fstep / -4;
-	    else 
+	    else
 	       y = 0;
 
-	    if (y) 
+	    if (y)
 	       f->y += y;
 	    movefish(f);
-	 } 
+	 }
 	 else
 	 {
 	    erasefish(f);
 	    new_fish(f,0);
 	 }
-      } 
+      }
    }
    XFlush(Dpy);
 }
@@ -832,7 +832,7 @@ int do_move(void *dummy)
    if (UseXdbe)
    {
       XdbeSwapInfo swapInfo;
-      swapInfo.swap_window = wid1; 
+      swapInfo.swap_window = wid1;
       swapInfo.swap_action = BMETHOD;
       XdbeSwapBuffers(Dpy, &swapInfo, 1);
       if(xfishtank_trans)
@@ -840,12 +840,12 @@ int do_move(void *dummy)
    }
    else
    {
-      XFlush(Dpy); 
+      XFlush(Dpy);
       remove_all_bubbles();
       remove_all_fishes();
    }
 #else
-   XFlush(Dpy); 
+   XFlush(Dpy);
    remove_all_bubbles();
    remove_all_fishes();
 #endif
@@ -961,7 +961,7 @@ void SigHandler(int signum)
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
 int main(int argc, char *argv[])
 {
-   // Circumvent wayland problems:before starting gtk: make sure that the 
+   // Circumvent wayland problems:before starting gtk: make sure that the
    // gdk-x11 backend is used.
 
    setenv("GDK_BACKEND","x11",1);
@@ -1053,7 +1053,7 @@ void selfrep()
    {
       printf("Not sending tar file to terminal.\n");
       printf("Try redirecting to a file (e.g: xfishtank -selfrep > xfishtank.tar.gz),\n");
-      printf("or use a pipe (e.g: xfishtank -selfrep | tar zxf -).\n"); 
+      printf("or use a pipe (e.g: xfishtank -selfrep | tar zxf -).\n");
    }
    else
    {
