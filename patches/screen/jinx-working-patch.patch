diff --git screen-clean/misc.c screen-workdir/misc.c
index 2690923..e0479d9 100644
--- screen-clean/misc.c
+++ screen-workdir/misc.c
@@ -156,7 +156,7 @@ void closeallfiles(int except)
 	int maxfd, i, fd, ret, z;
 
 	i = 3; /* skip stdin, stdout and stderr */
-	maxfd = getdtablesize();
+	maxfd = sysconf(_SC_OPEN_MAX);
 
 	while (i < maxfd) {
 		memset(pfd, 0, sizeof(pfd));
diff --git screen-clean/socket.c screen-workdir/socket.c
index 94508a7..c4e73fa 100644
--- screen-clean/socket.c
+++ screen-workdir/socket.c
@@ -31,6 +31,7 @@
 #include "socket.h"
 
 #include <pwd.h>
+#include <crypt.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -398,8 +399,8 @@ int MakeServerSocket(void)
 	if (bind(s, (struct sockaddr *)&a, strlen(SocketPath) + 2) == -1)
 		Panic(errno, "bind (%s)", SocketPath);
 	chmod(SocketPath, SOCKMODE);
-	if (chown(SocketPath, real_uid, real_gid))
-		Panic(errno, "chown");
+	/*if (chown(SocketPath, real_uid, real_gid))
+		Panic(errno, "chown");*/
 	if (listen(s, 5) == -1)
 		Panic(errno, "listen");
 #ifdef F_SETOWN
@@ -1174,12 +1175,12 @@ static bool CheckPassword(const char *password) {
 	int pam_ret;
 	char *tty_name;
 
-	reply = (struct pam_response *)malloc(sizeof(struct pam_response));  
+	reply = (struct pam_response *)malloc(sizeof(struct pam_response));
 
-	reply[0].resp = strdup(password);  
-	reply[0].resp_retcode = 0;  
+	reply[0].resp = strdup(password);
+	reply[0].resp_retcode = 0;
 
-	pamc.conv = &screen_conv; 
+	pamc.conv = &screen_conv;
 	pamc.appdata_ptr = (void *)reply;
 	pam_ret= pam_start("screen", ppp->pw_name, &pamc, &pamh);
 	if (pam_ret!= PAM_SUCCESS) {
diff --git screen-clean/tty.c screen-workdir/tty.c
index de5b8cd..3977ae3 100644
--- screen-clean/tty.c
+++ screen-workdir/tty.c
@@ -867,14 +867,14 @@ int TtyGrabConsole(int fd, bool on, char *rc_name)
 	InitTTY(&new1, 0);
 	SetMode(&new1, &new2, 0, 0);
 	SetTTY(consredirfd[1], &new2);
-	if (UserContext() == 1)
+	/*if (UserContext() == 1)
 		UserReturn(ioctl(consredirfd[1], TIOCCONS, (char *)&on));
 	if (UserStatus()) {
 		Msg(errno, "%s: ioctl TIOCCONS failed", rc_name);
 		close(consredirfd[0]);
 		close(consredirfd[1]);
 		return -1;
-	}
+	}*/
 #endif
 	consredir_ev.fd = consredirfd[0];
 	consredir_ev.type = EV_READ;
