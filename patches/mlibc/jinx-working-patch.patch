diff --git mlibc-clean/meson.build mlibc-workdir/meson.build
index a1e526b..9515929 100644
--- mlibc-clean/meson.build
+++ mlibc-workdir/meson.build
@@ -239,6 +239,7 @@ elif host_machine.system() == 'managarm'
 elif host_machine.system() == 'ironclad'
 	rtld_include_dirs += include_directories('sysdeps/ironclad/include')
 	libc_include_dirs += include_directories('sysdeps/ironclad/include')
+	internal_conf.set10('MLIBC_MMAP_ALLOCATE_DSO', true)
 	subdir('sysdeps/ironclad')
 elif host_machine.system() == 'keyronex'
 	rtld_include_dirs += include_directories('sysdeps/keyronex/include')
diff --git mlibc-clean/options/posix/generic/sys-shm.cpp mlibc-workdir/options/posix/generic/sys-shm.cpp
index 8782ae6..bfacac2 100644
--- mlibc-clean/options/posix/generic/sys-shm.cpp
+++ mlibc-workdir/options/posix/generic/sys-shm.cpp
@@ -4,6 +4,7 @@
 #include <bits/ensure.h>
 #include <mlibc/debug.hpp>
 #include <mlibc/posix-sysdeps.hpp>
+#include <sys/syscall.h>
 
 void *shmat(int shmid, const void *shmaddr, int shmflg) {
 	void *ret;
@@ -17,11 +18,7 @@ void *shmat(int shmid, const void *shmaddr, int shmflg) {
 
 int shmctl(int shmid, int cmd, struct shmid_ds *buf) {
 	int ret;
-	auto sysdep = MLIBC_CHECK_OR_ENOSYS(mlibc::sys_shmctl, -1);
-	if(int e = sysdep(&ret, shmid, cmd, buf); e) {
-		errno = e;
-		return -1;
-	}
+	SYSCALL3(SYSCALL_SHMCTL, shmid, cmd, buf);
 	return ret;
 }
 
diff --git mlibc-clean/options/rtld/generic/linker.cpp mlibc-workdir/options/rtld/generic/linker.cpp
index 33cd1b9..fbb98d4 100644
--- mlibc-clean/options/rtld/generic/linker.cpp
+++ mlibc-workdir/options/rtld/generic/linker.cpp
@@ -521,6 +521,7 @@ frg::expected<LinkerError, void> ObjectRepository::_fetchFromFile(SharedObject *
 		return LinkerError::outOfMemory;
 	}
 
+	mlibc::sys_vm_unmap(mappedAddr, highest_address - object->baseAddress);
 	object->baseAddress = reinterpret_cast<uintptr_t>(mappedAddr);
 #else
 	object->baseAddress = libraryBase;
diff --git mlibc-clean/sysdeps/ironclad/generic/generic.cpp mlibc-workdir/sysdeps/ironclad/generic/generic.cpp
index 68e6fee..7ca64b1 100644
--- mlibc-clean/sysdeps/ironclad/generic/generic.cpp
+++ mlibc-workdir/sysdeps/ironclad/generic/generic.cpp
@@ -25,13 +25,8 @@ extern "C" void __mlibc_sigret(void);
 namespace mlibc {
 
 void sys_libc_log(const char *message) {
-#ifdef __MLIBC_DEBUG
-	ssize_t unused;
-	sys_write(2, message, strlen(message), &unused);
-	sys_write(2, "\n", 1, &unused);
-#else
+
 	(void)message;
-#endif
 }
 
 void sys_libc_panic() {
@@ -713,8 +708,9 @@ int sys_link(const char* srcpath, const char* destpath) {
 }
 
 int sys_socket(int domain, int type, int protocol, int *fd) {
+	(void)protocol;
 	int ret, errno;
-	SYSCALL3(SYSCALL_SOCKET, domain, type, protocol);
+	SYSCALL2(SYSCALL_SOCKET, domain, type);
 	if (ret != -1) {
 		*fd = ret;
 		return 0;
@@ -723,6 +719,13 @@ int sys_socket(int domain, int type, int protocol, int *fd) {
 	}
 }
 
+int sys_socketpair(int domain, int type, int protocol, int *fds) {
+	(void)protocol;
+	int ret, errno;
+	SYSCALL3(SYSCALL_SOCKETPAIR, domain, type, fds);
+	return errno;
+}
+
 uid_t sys_getuid() {
 	uint64_t ret, errno;
 	SYSCALL0(SYSCALL_GETUID);
diff --git mlibc-clean/sysdeps/ironclad/include/sys/syscall.h mlibc-workdir/sysdeps/ironclad/include/sys/syscall.h
index 9c576dc..cded030 100644
--- mlibc-clean/sysdeps/ironclad/include/sys/syscall.h
+++ mlibc-workdir/sysdeps/ironclad/include/sys/syscall.h
@@ -124,6 +124,7 @@
 #define SYSCALL_MEMINFO             112
 #define SYSCALL_LISTPCI             113
 #define SYSCALL_GETCPUINFO          114
+#define SYSCALL_SOCKETPAIR          115
 
 #if defined(__x86_64__)
 #define SYSCALL0(NUM) ({ \
