diff --git qemu-clean/backends/tpm/tpm_ioctl.h qemu-workdir/backends/tpm/tpm_ioctl.h
index ee2dd15..24e88da 100644
--- qemu-clean/backends/tpm/tpm_ioctl.h
+++ qemu-workdir/backends/tpm/tpm_ioctl.h
@@ -285,30 +285,6 @@ typedef struct ptm_lockstorage ptm_lockstorage;
 #define PTM_CAP_SEND_COMMAND_HEADER (1 << 15)
 #define PTM_CAP_LOCK_STORAGE       (1 << 16)
 
-#ifndef _WIN32
-enum {
-    PTM_GET_CAPABILITY     = _IOR('P', 0, ptm_cap),
-    PTM_INIT               = _IOWR('P', 1, ptm_init),
-    PTM_SHUTDOWN           = _IOR('P', 2, ptm_res),
-    PTM_GET_TPMESTABLISHED = _IOR('P', 3, ptm_est),
-    PTM_SET_LOCALITY       = _IOWR('P', 4, ptm_loc),
-    PTM_HASH_START         = _IOR('P', 5, ptm_res),
-    PTM_HASH_DATA          = _IOWR('P', 6, ptm_hdata),
-    PTM_HASH_END           = _IOR('P', 7, ptm_res),
-    PTM_CANCEL_TPM_CMD     = _IOR('P', 8, ptm_res),
-    PTM_STORE_VOLATILE     = _IOR('P', 9, ptm_res),
-    PTM_RESET_TPMESTABLISHED = _IOWR('P', 10, ptm_reset_est),
-    PTM_GET_STATEBLOB      = _IOWR('P', 11, ptm_getstate),
-    PTM_SET_STATEBLOB      = _IOWR('P', 12, ptm_setstate),
-    PTM_STOP               = _IOR('P', 13, ptm_res),
-    PTM_GET_CONFIG         = _IOR('P', 14, ptm_getconfig),
-    PTM_SET_DATAFD         = _IOR('P', 15, ptm_res),
-    PTM_SET_BUFFERSIZE     = _IOWR('P', 16, ptm_setbuffersize),
-    PTM_GET_INFO           = _IOWR('P', 17, ptm_getinfo),
-    PTM_LOCK_STORAGE       = _IOWR('P', 18, ptm_lockstorage),
-};
-#endif
-
 /*
  * Commands used by the non-CUSE TPMs
  *
diff --git qemu-clean/block/file-posix.c qemu-workdir/block/file-posix.c
index 8c73867..f48f8ed 100644
--- qemu-clean/block/file-posix.c
+++ qemu-workdir/block/file-posix.c
@@ -125,6 +125,8 @@
 #endif
 #endif
 
+#include <sys/ioctl.h>
+
 /* Approximate O_DIRECT with O_DSYNC if O_DIRECT isn't available */
 #ifndef O_DIRECT
 #define O_DIRECT O_DSYNC
diff --git qemu-clean/configure qemu-workdir/configure
index 274a778..db8b00f 100755
--- qemu-clean/configure
+++ qemu-workdir/configure
@@ -343,7 +343,9 @@ int main(void) { return 0; }
 EOF
 }
 
-if check_define __linux__ ; then
+if check_define __ironclad__ ; then
+  host_os=ironclad
+elif check_define __linux__ ; then
   host_os=linux
 elif check_define _WIN32 ; then
   host_os=windows
diff --git qemu-clean/include/gdbstub/syscalls.h qemu-workdir/include/gdbstub/syscalls.h
index d63228e..62c57e1 100644
--- qemu-clean/include/gdbstub/syscalls.h
+++ qemu-workdir/include/gdbstub/syscalls.h
@@ -41,9 +41,10 @@
 #define GDB_EUNKNOWN       9999
 
 /* For gdb file i/o remote protocol lseek whence. */
-#define GDB_SEEK_SET  0
-#define GDB_SEEK_CUR  1
-#define GDB_SEEK_END  2
+#include <unistd.h>
+#define GDB_SEEK_SET  SEEK_SET
+#define GDB_SEEK_CUR  SEEK_CUR
+#define GDB_SEEK_END  SEEK_END
 
 /* For gdb file i/o stat/fstat. */
 typedef uint32_t gdb_mode_t;
diff --git qemu-clean/meson.build qemu-workdir/meson.build
index 50c774a..ccfc242 100644
--- qemu-clean/meson.build
+++ qemu-workdir/meson.build
@@ -903,7 +903,7 @@ if get_option('hvf').allowed()
 endif
 
 nvmm = not_found
-if host_os == 'netbsd'
+if host_os == 'netbsd' or host_os == 'ironclad'
   nvmm = cc.find_library('nvmm', required: get_option('nvmm'))
   if nvmm.found()
     accelerators += 'CONFIG_NVMM'
@@ -2561,6 +2561,7 @@ config_host_data.set('CONFIG_PASST', enable_passt)
 config_host_data.set('CONFIG_SLIRP', slirp.found())
 config_host_data.set('CONFIG_SNAPPY', snappy.found())
 config_host_data.set('CONFIG_SOLARIS', host_os == 'sunos')
+config_host_data.set('CONFIG_IRONCLAD', host_os == 'ironclad')
 if have_tcg
   config_host_data.set('CONFIG_TCG', 1)
   config_host_data.set('CONFIG_TCG_INTERPRETER', tcg_arch == 'tci')
diff --git qemu-clean/subprojects/dtc/libfdt/meson.build qemu-workdir/subprojects/dtc/libfdt/meson.build
index 0307ffb..1cde105 100644
--- qemu-clean/subprojects/dtc/libfdt/meson.build
+++ qemu-workdir/subprojects/dtc/libfdt/meson.build
@@ -21,7 +21,7 @@ libfdt = library(
   version: '1.6.0',
   link_args: ['-Wl,--no-undefined', version_script],
   link_depends: 'version.lds',
-  install: true,
+  install: false,
 )
 
 libfdt_inc = include_directories('.')
@@ -30,21 +30,3 @@ libfdt_dep = declare_dependency(
   include_directories: libfdt_inc,
   link_with: libfdt,
 )
-
-install_headers(
-  files(
-    'fdt.h',
-    'libfdt.h',
-    'libfdt_env.h',
-  )
-)
-
-pkgconfig = import('pkgconfig')
-
-pkgconfig.generate(
-  libraries: libfdt,
-  version: meson.project_version(),
-  filebase: 'libfdt',
-  name: 'libfdt',
-  description: 'Flat Device Tree manipulation',
-)
diff --git qemu-clean/target/i386/nvmm/nvmm-all.c qemu-workdir/target/i386/nvmm/nvmm-all.c
index 92e3b8b..f6bf95e 100644
--- qemu-clean/target/i386/nvmm/nvmm-all.c
+++ qemu-workdir/target/i386/nvmm/nvmm-all.c
@@ -984,7 +984,7 @@ nvmm_init_vcpu(CPUState *cpu)
         }
     }
 
-    qcpu->vcpu_dirty = true;
+    cpu->vcpu_dirty = true;
     cpu->accel = qcpu;
 
     return 0;
diff --git qemu-clean/util/cpuinfo-riscv.c qemu-workdir/util/cpuinfo-riscv.c
index 0291b72..df89863 100644
--- qemu-clean/util/cpuinfo-riscv.c
+++ qemu-workdir/util/cpuinfo-riscv.c
@@ -24,6 +24,8 @@ static void sigill_handler(int signo, siginfo_t *si, void *data)
 
 #ifdef __linux__
     uc->uc_mcontext.__gregs[REG_PC] += 4;
+#elif defined(__ironclad__)
+    // XXX: Actually implement this
 #elif defined(__OpenBSD__)
     uc->sc_sepc += 4;
 #else
