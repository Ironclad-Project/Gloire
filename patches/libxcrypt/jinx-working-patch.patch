diff --git libxcrypt-clean/build-aux/scripts/BuildCommon.pm libxcrypt-workdir/build-aux/scripts/BuildCommon.pm
index 0e6f2a3..c38ba21 100644
--- libxcrypt-clean/build-aux/scripts/BuildCommon.pm
+++ libxcrypt-workdir/build-aux/scripts/BuildCommon.pm
@@ -11,7 +11,6 @@ use v5.14;    # implicit use strict, use feature ':5.14'
 use warnings FATAL => 'all';
 use utf8;
 use open qw(:utf8);
-no  if $] >= 5.018, warnings => 'experimental::smartmatch';
 no  if $] >= 5.022, warnings => 'experimental::re_strict';
 use if $] >= 5.022, re       => 'strict';
 
@@ -519,19 +518,19 @@ sub parse_symver_args {
     my $COMPAT_ABI;
     local $_;
     for (@args) {
-        when (/^SYMVER_MIN=(.+)$/) {
+        if (/^SYMVER_MIN=(.+)$/) {
             $usage_error->() if defined $SYMVER_MIN;
             $SYMVER_MIN = $1;
         }
-        when (/^SYMVER_FLOOR=(.+)$/) {
+        elsif (/^SYMVER_FLOOR=(.+)$/) {
             $usage_error->() if defined $SYMVER_FLOOR;
             $SYMVER_FLOOR = $1;
         }
-        when (/^COMPAT_ABI=(.+)$/) {
+        elsif (/^COMPAT_ABI=(.+)$/) {
             $usage_error->() if defined $COMPAT_ABI;
             $COMPAT_ABI = $1;
         }
-        default {
+        else {
             $usage_error->() if defined $map_in;
             $map_in = $_;
         }
diff --git libxcrypt-clean/build-aux/scripts/gen-crypt-h libxcrypt-workdir/build-aux/scripts/gen-crypt-h
index 12aecf6..b113b79 100644
--- libxcrypt-clean/build-aux/scripts/gen-crypt-h
+++ libxcrypt-workdir/build-aux/scripts/gen-crypt-h
@@ -12,7 +12,6 @@ use v5.14;    # implicit use strict, use feature ':5.14'
 use warnings FATAL => 'all';
 use utf8;
 use open qw(:std :utf8);
-no  if $] >= 5.018, warnings => 'experimental::smartmatch';
 no  if $] >= 5.022, warnings => 'experimental::re_strict';
 use if $] >= 5.022, re       => 'strict';
 
@@ -37,22 +36,20 @@ sub process_config_h {
     local $_;
     while (<$fh>) {
         chomp;
-        # Yes, 'given $_' is really required here.
-        given ($_) {
-            when ('#define HAVE_SYS_CDEFS_H 1') {
-                $have_sys_cdefs_h = 1;
-            }
-            when ('#define HAVE_SYS_CDEFS_BEGIN_END_DECLS 1') {
-                $have_sys_cdefs_begin_end_decls = 1;
-            }
-            when ('#define HAVE_SYS_CDEFS_THROW 1') {
-                $have_sys_cdefs_throw = 1;
-            }
-            when (/^#define PACKAGE_VERSION "((\d+)\.(\d+)\.\d+)"$/) {
-                $substs{XCRYPT_VERSION_STR}   = $1;
-                $substs{XCRYPT_VERSION_MAJOR} = $2;
-                $substs{XCRYPT_VERSION_MINOR} = $3;
-            }
+
+        if ($_ eq '#define HAVE_SYS_CDEFS_H 1') {
+            $have_sys_cdefs_h = 1;
+        }
+        elsif ($_ eq '#define HAVE_SYS_CDEFS_BEGIN_END_DECLS 1') {
+            $have_sys_cdefs_begin_end_decls = 1;
+        }
+        elsif ($_ eq '#define HAVE_SYS_CDEFS_THROW 1') {
+            $have_sys_cdefs_throw = 1;
+        }
+        elsif (/^#define PACKAGE_VERSION "((\d+)\.(\d+)\.\d+)"$/) {
+            $substs{XCRYPT_VERSION_STR}   = $1;
+            $substs{XCRYPT_VERSION_MAJOR} = $2;
+            $substs{XCRYPT_VERSION_MINOR} = $3;
         }
     }
 
