diff --git python-clean/Modules/timemodule.c python-workdir/Modules/timemodule.c
index 94260ba..4e68377 100644
--- python-clean/Modules/timemodule.c
+++ python-workdir/Modules/timemodule.c
@@ -185,7 +185,7 @@ py_clock(time_module_state *state, PyTime_t *tp, _Py_clock_info_t *info)
 static int
 time_clockid_converter(PyObject *obj, clockid_t *p)
 {
-#ifdef _AIX
+#if defined(_AIX) || defined(__ironclad__)
     long long clk_id = PyLong_AsLongLong(obj);
 #else
     int clk_id = PyLong_AsInt(obj);
diff --git python-clean/Objects/mimalloc/prim/unix/prim.c python-workdir/Objects/mimalloc/prim/unix/prim.c
index 4d3fb65..55c7139 100644
--- python-clean/Objects/mimalloc/prim/unix/prim.c
+++ python-workdir/Objects/mimalloc/prim/unix/prim.c
@@ -29,6 +29,10 @@ terms of the MIT license. A copy of the license can be found in the file
 #include <unistd.h>    // sysconf
 #include <fcntl.h>     // open, close, read, access
 
+#if defined(__ironclad__)
+  #define MADV_DONTNEED 1
+#endif
+
 #if defined(__linux__)
   #include <features.h>
   #include <fcntl.h>
@@ -156,6 +160,9 @@ int _mi_prim_free(void* addr, size_t size ) {
 static int unix_madvise(void* addr, size_t size, int advice) {
   #if defined(__sun)
   return madvise((caddr_t)addr, size, advice);  // Solaris needs cast (issue #520)
+  #elif defined(__ironclad__)
+  (void)addr; (void)size; (void)advice;
+  return 0;
   #else
   return madvise(addr, size, advice);
   #endif
diff --git python-clean/configure.ac python-workdir/configure.ac
index 3fcb189..e669427 100644
--- python-clean/configure.ac
+++ python-workdir/configure.ac
@@ -339,6 +339,9 @@ then
 	*-*-wasi*)
 	    ac_sys_system=WASI
 	    ;;
+	*-*-ironclad*)
+	    ac_sys_system=Ironclad
+	    ;;
 	*)
 		# for now, limit cross builds to known configurations
 		MACHDEP="unknown"
@@ -452,6 +455,9 @@ AC_ARG_ENABLE([universalsdk],
 		UNIVERSALSDK=
 		enable_universalsdk=
 		;;
+	*-*-ironclad*)
+		_host_cpu=$host_cpu
+		;;
 	*)
 		UNIVERSALSDK=$enableval
 		if test ! -d "${UNIVERSALSDK}"
@@ -739,7 +745,7 @@ AC_SUBST([APP_STORE_COMPLIANCE_PATCH])
 AC_SUBST([_PYTHON_HOST_PLATFORM])
 if test "$cross_compiling" = yes; then
 	case "$host" in
-	*-*-linux*)
+	*-*-linux*|*-*-ironclad*)
 		case "$host_cpu" in
 		arm*)
 			_host_ident=arm
@@ -1557,7 +1563,7 @@ if test $enable_shared = "yes"; then
         PY3LIBRARY=libpython3.so
       fi
       ;;
-    Linux*|GNU*|NetBSD*|FreeBSD*|DragonFly*|OpenBSD*|VxWorks*)
+    Linux*|Ironclad*|GNU*|NetBSD*|FreeBSD*|DragonFly*|OpenBSD*|VxWorks*)
       LDLIBRARY='libpython$(LDVERSION).so'
       BLDLIBRARY='-L. -lpython$(LDVERSION)'
       RUNSHARED=LD_LIBRARY_PATH=`pwd`${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
@@ -3542,6 +3548,10 @@ then
 	CYGWIN*)
 		LDSHARED="gcc -shared -Wl,--enable-auto-image-base"
 		LDCXXSHARED="g++ -shared -Wl,--enable-auto-image-base";;
+	Ironclad*)
+		LDSHARED='$(CC) -shared'
+		LDCXXSHARED='$(CXX) -shared'
+		;;
 	*)	LDSHARED="ld";;
 	esac
 fi
@@ -3594,6 +3604,10 @@ then
 		fi;;
 	VxWorks*)
 		CCSHARED="-fpic -D__SO_PICABILINUX__  -ftls-model=global-dynamic"
+		;;
+	Ironclad*)
+		CCSHARED="-fPIC"
+		;;
 	esac
 fi
 AC_MSG_RESULT([$CCSHARED])
@@ -3667,6 +3681,8 @@ then
 		LINKFORSHARED='-Wl,-E -N 2048K';;
 	VxWorks*)
 		LINKFORSHARED='-Wl,-export-dynamic';;
+	Ironclad*)
+		LINKFORSHARED="-export-dynamic";;
 	esac
 fi
 AC_MSG_RESULT([$LINKFORSHARED])
