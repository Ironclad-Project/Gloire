diff --git libxshmfence-clean/src/xshmfence_futex.h libxshmfence-workdir/src/xshmfence_futex.h
index 673ac0e..80a6596 100644
--- libxshmfence-clean/src/xshmfence_futex.h
+++ libxshmfence-workdir/src/xshmfence_futex.h
@@ -51,19 +51,26 @@ static inline int futex_wait(int32_t *addr, int32_t value) {
 #include <values.h>
 #include <linux/futex.h>
 #include <sys/time.h>
-#include <sys/syscall.h>
+#include <ironclad/syscall.h>
 
-static inline long sys_futex(void *addr1, int op, int val1, struct timespec *timeout, void *addr2, int val3)
-{
-	return syscall(SYS_futex, addr1, op, val1, timeout, addr2, val3);
-}
+static inline int futex_wait(int32_t *pointer, int32_t expected) {
+    struct __syscall_ret ret = __syscall(SYS_futex_wait, pointer, expected, NULL);
 
-static inline int futex_wake(int32_t *addr) {
-	return sys_futex(addr, FUTEX_WAKE, MAXINT, NULL, NULL, 0);
+    if ((int)ret.ret == -1)
+        return ret.errno;
+
+    return 0;
 }
 
-static inline int futex_wait(int32_t *addr, int32_t value) {
-	return sys_futex(addr, FUTEX_WAIT, value, NULL, NULL, 0);
+static inline int futex_wake(int32_t *pointer) {
+    struct __syscall_ret ret = __syscall(SYS_futex_wake, pointer);
+
+    if ((int)ret.ret == -1)
+        return ret.errno;
+
+    int num_woken = ret.ret;
+
+    return num_woken;
 }
 
 #endif
