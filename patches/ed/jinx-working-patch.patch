diff --git ed-clean/buffer.c ed-workdir/buffer.c
index 12c3e99..102d5d6 100644
--- ed-clean/buffer.c
+++ ed-workdir/buffer.c
@@ -29,15 +29,15 @@
 #include "ed.h"
 
 
-static int current_addr_ = 0;	/* current address in editor buffer */
-static int last_addr_ = 0;	/* last address in editor buffer */
-static bool isbinary_ = false;	/* if set, buffer contains ASCII NULs */
-static bool modified_ = false;	/* if set, buffer modified since last write */
-
-static bool seek_write = false;	/* seek before writing */
-static FILE * sfp = 0;		/* scratch file pointer */
-static long sfpos = 0;		/* scratch file position */
-static line_t buffer_head;	/* editor buffer ( linked list of line_t )*/
+static int current_addr_ = 0; /* current address in editor buffer */
+static int last_addr_ = 0; /* last address in editor buffer */
+static bool isbinary_ = false;   /* if set, buffer contains ASCII NULs */
+static bool modified_ = false;   /* if set, buffer modified since last write */
+
+static bool seek_write = false;  /* seek before writing */
+static FILE * sfp = 0;     /* scratch file pointer */
+static long sfpos = 0;     /* scratch file position */
+static line_t buffer_head; /* editor buffer ( linked list of line_t )*/
 static line_t yank_buffer_head;
 
 
@@ -124,8 +124,8 @@ bool append_lines( const char ** const ibufpp, const int addr,
     if( !isglobal )
       {
       *ibufpp = get_stdin_line( &size );
-      if( !*ibufpp ) return false;			/* error */
-      if( size <= 0 ) return true;			/* EOF */
+      if( !*ibufpp ) return false;        /* error */
+      if( size <= 0 ) return true;        /* EOF */
       }
     else
       {
@@ -232,7 +232,7 @@ bool delete_lines( const int from, const int to, const bool isglobal )
   if( !push_undo_atom( UDEL, from, to ) )
     { enable_interrupts(); return false; }
   n = search_line_node( inc_addr( to ) );
-  p = search_line_node( from - 1 );	/* this search_line_node last! */
+  p = search_line_node( from - 1 ); /* this search_line_node last! */
   if( isglobal ) unset_active_nodes( p->q_forw, n );
   link_nodes( p, n );
   last_addr_ -= to - from + 1;
@@ -263,7 +263,7 @@ char * get_sbuf_line( const line_t * const lp )
   int len;
 
   if( lp == &buffer_head ) return 0;
-  seek_write = true;			/* force seek on write */
+  seek_write = true;       /* force seek on write */
   /* out of position */
   if( sfpos != lp->pos )
     {
@@ -283,7 +283,7 @@ char * get_sbuf_line( const line_t * const lp )
     set_error_msg( "Cannot read temp file" );
     return 0;
     }
-  sfpos += len;		/* update file position */
+  sfpos += len;      /* update file position */
   buf[len] = 0;
   return buf;
   }
@@ -362,12 +362,12 @@ bool move_lines( const int first_addr, const int second_addr, const int addr,
     if( addr < first_addr )
       {
       b1 = search_line_node( p );
-      b2 = search_line_node( addr );	/* this search_line_node last! */
+      b2 = search_line_node( addr );   /* this search_line_node last! */
       }
     else
       {
       b2 = search_line_node( addr );
-      b1 = search_line_node( p );	/* this search_line_node last! */
+      b1 = search_line_node( p );   /* this search_line_node last! */
       }
     a2 = b2->q_forw;
     link_nodes( b2, b1->q_forw );
@@ -387,7 +387,7 @@ bool move_lines( const int first_addr, const int second_addr, const int addr,
 bool open_sbuf( void )
   {
   isbinary_ = false; reset_unterminated_line();
-  sfp = tmpfile();
+  sfp = fopen("/tmp/tmp-ed", "w+");
   if( !sfp )
     {
     show_strerror( 0, errno );
@@ -454,7 +454,7 @@ const char * put_sbuf_line( const char * const buf, const int size )
   const int len = p - buf;
   if( too_many_lines() ) return 0;
 
-  if( seek_write )				/* out of position */
+  if( seek_write )            /* out of position */
     {
     if( fseek( sfp, 0L, SEEK_END ) != 0 )
       {
@@ -465,7 +465,7 @@ const char * put_sbuf_line( const char * const buf, const int size )
     sfpos = ftell( sfp );
     seek_write = false;
     }
-  if( (int)fwrite( buf, 1, len, sfp ) != len )	/* assert: interrupts disabled */
+  if( (int)fwrite( buf, 1, len, sfp ) != len )  /* assert: interrupts disabled */
     {
     sfpos = -1;
     show_strerror( 0, errno );
@@ -476,7 +476,7 @@ const char * put_sbuf_line( const char * const buf, const int size )
   if( !lp ) return 0;
   lp->pos = sfpos; lp->len = len;
   add_line_node( lp );
-  sfpos += len;				/* update file position */
+  sfpos += len;            /* update file position */
   return p + 1;
   }
 
@@ -530,11 +530,11 @@ bool yank_lines( const int from, const int to )
   }
 
 
-static undo_t * ustack = 0;		/* undo stack */
-static int usize = 0;			/* ustack size (in bytes) */
-static int u_idx = 0;			/* undo stack index */
-static int u_current_addr = -1;		/* if < 0, undo disabled */
-static int u_last_addr = -1;		/* if < 0, undo disabled */
+static undo_t * ustack = 0;      /* undo stack */
+static int usize = 0;         /* ustack size (in bytes) */
+static int u_idx = 0;         /* undo stack index */
+static int u_current_addr = -1;     /* if < 0, undo disabled */
+static int u_last_addr = -1;     /* if < 0, undo disabled */
 static bool u_modified = false;
 
 
@@ -622,7 +622,7 @@ bool undo( const bool isglobal )
 
   if( u_idx <= 0 || u_current_addr < 0 || u_last_addr < 0 )
     { set_error_msg( "Nothing to undo" ); return false; }
-  search_line_node( 0 );		/* reset cached value */
+  search_line_node( 0 );      /* reset cached value */
   disable_interrupts();
   for( n = u_idx - 1; n >= 0; --n )
     {
diff --git ed-clean/configure ed-workdir/configure
index 5692ef9..b91a628 100755
--- ed-clean/configure
+++ ed-workdir/configure
@@ -14,14 +14,14 @@ srctrigger=doc/${pkgname}.texi
 LC_ALL=C
 export LC_ALL
 srcdir=
-prefix=/usr/local
+prefix=/usr
 exec_prefix='$(prefix)'
 bindir='$(exec_prefix)/bin'
 datarootdir='$(prefix)/share'
 infodir='$(datarootdir)/info'
 mandir='$(datarootdir)/man'
 program_prefix=
-CC=gcc
+CC=x86_64-ironclad-gcc
 CPPFLAGS=
 CFLAGS='-Wall -W -O2'
 LDFLAGS=
@@ -35,108 +35,108 @@ args=
 no_create=
 while [ $# != 0 ] ; do
 
-	# Get the first arg, and shuffle
-	option=$1 ; arg2=no
-	shift
-
-	# Add the argument quoted to args
-	if [ -z "${args}" ] ; then args="\"${option}\""
-	else args="${args} \"${option}\"" ; fi
-
-	# Split out the argument for options that take them
-	case ${option} in
-	*=*) optarg=`echo "${option}" | sed -e 's,^[^=]*=,,;s,/$,,'` ;;
-	esac
-
-	# Process the options
-	case ${option} in
-	--help | -h)
-		echo "Usage: $0 [OPTION]... [VAR=VALUE]..."
-		echo
-		echo "To assign makefile variables (e.g., CC, CFLAGS...), specify them as"
-		echo "arguments to configure in the form VAR=VALUE."
-		echo
-		echo "Options and variables: [defaults in brackets]"
-		echo "  -h, --help            display this help and exit"
-		echo "  -V, --version         output version information and exit"
-		echo "  --srcdir=DIR          find the source code in DIR [. or ..]"
-		echo "  --prefix=DIR          install into DIR [${prefix}]"
-		echo "  --exec-prefix=DIR     base directory for arch-dependent files [${exec_prefix}]"
-		echo "  --bindir=DIR          user executables directory [${bindir}]"
-		echo "  --datarootdir=DIR     base directory for doc and data [${datarootdir}]"
-		echo "  --infodir=DIR         info files directory [${infodir}]"
-		echo "  --mandir=DIR          man pages directory [${mandir}]"
-		echo "  --program-prefix=NAME install program and documentation prefixed with NAME"
-		echo "  CC=COMPILER           C compiler to use [${CC}]"
-		echo "  CPPFLAGS=OPTIONS      command line options for the preprocessor [${CPPFLAGS}]"
-		echo "  CFLAGS=OPTIONS        command line options for the C compiler [${CFLAGS}]"
-		echo "  CFLAGS+=OPTIONS       append options to the current value of CFLAGS"
-		echo "  LDFLAGS=OPTIONS       command line options for the linker [${LDFLAGS}]"
-		echo "  MAKEINFO=NAME         makeinfo program to use [${MAKEINFO}]"
-		echo
-		exit 0 ;;
-	--version | -V)
-		echo "Configure script for GNU ${pkgname} version ${pkgversion}"
-		exit 0 ;;
-	--srcdir)            srcdir=$1 ; arg2=yes ;;
-	--prefix)            prefix=$1 ; arg2=yes ;;
-	--exec-prefix)  exec_prefix=$1 ; arg2=yes ;;
-	--bindir)            bindir=$1 ; arg2=yes ;;
-	--datarootdir)  datarootdir=$1 ; arg2=yes ;;
-	--infodir)          infodir=$1 ; arg2=yes ;;
-	--mandir)            mandir=$1 ; arg2=yes ;;
-	--program-prefix) program_prefix=$1 ; arg2=yes ;;
-
-	--srcdir=*)            srcdir=${optarg} ;;
-	--prefix=*)            prefix=${optarg} ;;
-	--exec-prefix=*)  exec_prefix=${optarg} ;;
-	--bindir=*)            bindir=${optarg} ;;
-	--datarootdir=*)  datarootdir=${optarg} ;;
-	--infodir=*)          infodir=${optarg} ;;
-	--mandir=*)            mandir=${optarg} ;;
-	--program-prefix=*) program_prefix=${optarg} ;;
-	--no-create)              no_create=yes ;;
-
-	CC=*)              CC=${optarg} ;;
-	CPPFLAGS=*)  CPPFLAGS=${optarg} ;;
-	CFLAGS=*)      CFLAGS=${optarg} ;;
-	CFLAGS+=*)     CFLAGS="${CFLAGS} ${optarg}" ;;
-	LDFLAGS=*)    LDFLAGS=${optarg} ;;
-	MAKEINFO=*)  MAKEINFO=${optarg} ;;
-
-	--*)
-		echo "configure: WARNING: unrecognized option: '${option}'" 1>&2 ;;
-	*=* | *-*-*) ;;
-	*)
-		echo "configure: unrecognized option: '${option}'" 1>&2
-		echo "Try 'configure --help' for more information." 1>&2
-		exit 1 ;;
-	esac
-
-	# Check if the option took a separate argument
-	if [ "${arg2}" = yes ] ; then
-		if [ $# != 0 ] ; then args="${args} \"$1\"" ; shift
-		else echo "configure: Missing argument to '${option}'" 1>&2
-			exit 1
-		fi
-	fi
+   # Get the first arg, and shuffle
+   option=$1 ; arg2=no
+   shift
+
+   # Add the argument quoted to args
+   if [ -z "${args}" ] ; then args="\"${option}\""
+   else args="${args} \"${option}\"" ; fi
+
+   # Split out the argument for options that take them
+   case ${option} in
+   *=*) optarg=`echo "${option}" | sed -e 's,^[^=]*=,,;s,/$,,'` ;;
+   esac
+
+   # Process the options
+   case ${option} in
+   --help | -h)
+      echo "Usage: $0 [OPTION]... [VAR=VALUE]..."
+      echo
+      echo "To assign makefile variables (e.g., CC, CFLAGS...), specify them as"
+      echo "arguments to configure in the form VAR=VALUE."
+      echo
+      echo "Options and variables: [defaults in brackets]"
+      echo "  -h, --help            display this help and exit"
+      echo "  -V, --version         output version information and exit"
+      echo "  --srcdir=DIR          find the source code in DIR [. or ..]"
+      echo "  --prefix=DIR          install into DIR [${prefix}]"
+      echo "  --exec-prefix=DIR     base directory for arch-dependent files [${exec_prefix}]"
+      echo "  --bindir=DIR          user executables directory [${bindir}]"
+      echo "  --datarootdir=DIR     base directory for doc and data [${datarootdir}]"
+      echo "  --infodir=DIR         info files directory [${infodir}]"
+      echo "  --mandir=DIR          man pages directory [${mandir}]"
+      echo "  --program-prefix=NAME install program and documentation prefixed with NAME"
+      echo "  CC=COMPILER           C compiler to use [${CC}]"
+      echo "  CPPFLAGS=OPTIONS      command line options for the preprocessor [${CPPFLAGS}]"
+      echo "  CFLAGS=OPTIONS        command line options for the C compiler [${CFLAGS}]"
+      echo "  CFLAGS+=OPTIONS       append options to the current value of CFLAGS"
+      echo "  LDFLAGS=OPTIONS       command line options for the linker [${LDFLAGS}]"
+      echo "  MAKEINFO=NAME         makeinfo program to use [${MAKEINFO}]"
+      echo
+      exit 0 ;;
+   --version | -V)
+      echo "Configure script for GNU ${pkgname} version ${pkgversion}"
+      exit 0 ;;
+   --srcdir)            srcdir=$1 ; arg2=yes ;;
+   --prefix)            prefix=$1 ; arg2=yes ;;
+   --exec-prefix)  exec_prefix=$1 ; arg2=yes ;;
+   --bindir)            bindir=$1 ; arg2=yes ;;
+   --datarootdir)  datarootdir=$1 ; arg2=yes ;;
+   --infodir)          infodir=$1 ; arg2=yes ;;
+   --mandir)            mandir=$1 ; arg2=yes ;;
+   --program-prefix) program_prefix=$1 ; arg2=yes ;;
+
+   --srcdir=*)            srcdir=${optarg} ;;
+   --prefix=*)            prefix=${optarg} ;;
+   --exec-prefix=*)  exec_prefix=${optarg} ;;
+   --bindir=*)            bindir=${optarg} ;;
+   --datarootdir=*)  datarootdir=${optarg} ;;
+   --infodir=*)          infodir=${optarg} ;;
+   --mandir=*)            mandir=${optarg} ;;
+   --program-prefix=*) program_prefix=${optarg} ;;
+   --no-create)              no_create=yes ;;
+
+   CC=*)              CC=${optarg} ;;
+   CPPFLAGS=*)  CPPFLAGS=${optarg} ;;
+   CFLAGS=*)      CFLAGS=${optarg} ;;
+   CFLAGS+=*)     CFLAGS="${CFLAGS} ${optarg}" ;;
+   LDFLAGS=*)    LDFLAGS=${optarg} ;;
+   MAKEINFO=*)  MAKEINFO=${optarg} ;;
+
+   --*)
+      echo "configure: WARNING: unrecognized option: '${option}'" 1>&2 ;;
+   *=* | *-*-*) ;;
+   *)
+      echo "configure: unrecognized option: '${option}'" 1>&2
+      echo "Try 'configure --help' for more information." 1>&2
+      exit 1 ;;
+   esac
+
+   # Check if the option took a separate argument
+   if [ "${arg2}" = yes ] ; then
+      if [ $# != 0 ] ; then args="${args} \"$1\"" ; shift
+      else echo "configure: Missing argument to '${option}'" 1>&2
+         exit 1
+      fi
+   fi
 done
 
 # Find the source code, if location was not specified.
 srcdirtext=
 if [ -z "${srcdir}" ] ; then
-	srcdirtext="or . or .." ; srcdir=.
-	if [ ! -r "${srcdir}/${srctrigger}" ] ; then srcdir=.. ; fi
-	if [ ! -r "${srcdir}/${srctrigger}" ] ; then
-		## the sed command below emulates the dirname command
-		srcdir=`echo "$0" | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`
-	fi
+   srcdirtext="or . or .." ; srcdir=.
+   if [ ! -r "${srcdir}/${srctrigger}" ] ; then srcdir=.. ; fi
+   if [ ! -r "${srcdir}/${srctrigger}" ] ; then
+      ## the sed command below emulates the dirname command
+      srcdir=`echo "$0" | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`
+   fi
 fi
 
 if [ ! -r "${srcdir}/${srctrigger}" ] ; then
-	echo "configure: Can't find source code in ${srcdir} ${srcdirtext}" 1>&2
-	echo "configure: (At least ${srctrigger} is missing)." 1>&2
-	exit 1
+   echo "configure: Can't find source code in ${srcdir} ${srcdirtext}" 1>&2
+   echo "configure: (At least ${srctrigger} is missing)." 1>&2
+   exit 1
 fi
 
 # Set srcdir to . if that's what it is.
@@ -144,9 +144,9 @@ if [ "`pwd`" = "`cd "${srcdir}" ; pwd`" ] ; then srcdir=. ; fi
 
 echo
 if [ -z "${no_create}" ] ; then
-	echo "creating config.status"
-	rm -f config.status
-	cat > config.status << EOF
+   echo "creating config.status"
+   rm -f config.status
+   cat > config.status << EOF
 #! /bin/sh
 # This file was generated automatically by configure. Don't edit.
 # Run this file to recreate the current configuration.
@@ -156,7 +156,7 @@ if [ -z "${no_create}" ] ; then
 
 exec /bin/sh $0 ${args} --no-create
 EOF
-	chmod +x config.status
+   chmod +x config.status
 fi
 
 echo "creating Makefile"
