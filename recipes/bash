#! /bin/sh

name=bash
_minor_version=5.3
_patch=003
version=${_minor_version}.${_patch}
revision=1
_base_patch=001
if [ "${_base_patch}" = 001 ]; then
    tarball_url="https://ftpmirror.gnu.org/gnu/bash/bash-${_minor_version}.tar.gz"
else
    tarball_url="https://ftpmirror.gnu.org/gnu/bash/bash-${_minor_version}.${_base_patch}.tar.gz"
fi
tarball_blake2b="88a4f0146eb11698120890f2afaf28210295135f8f7f61dcbb99eeb0c39c84da5360a3b0572a26dc2a36b207fd440b83bb5a947213af90306c8f6ab608964ff1"
source_allow_network=yes
imagedeps="build-essential"
hostdeps="gcc pkg-config"
deps="core-libs ncurses readline"

prepare() {
    if ! [ "${_patch}" = 0 ]; then
        for p in $(seq -w ${_base_patch} ${_patch}); do
            curl -L https://ftpmirror.gnu.org/gnu/bash/bash-${_minor_version}-patches/bash$(echo "${_minor_version}" | sed 's/\.//g')-$p | patch -p0
        done
    fi

    autotools_recursive_regen
}

configure() {
    autotools_configure \
        CFLAGS="$TARGET_CFLAGS \
            -DDEFAULT_PATH_VALUE='\"/usr/local/sbin:/usr/local/bin:/usr/bin\"' \
            -DSTANDARD_UTILS_PATH='\"/usr/bin\"' \
            -DSYS_BASHRC='\"/etc/bash.bashrc\"' \
            -DSYS_BASH_LOGOUT='\"/etc/bash.bash_logout\"' \
            -DNON_INTERACTIVE_LOGIN_SHELLS \
        " \
        --with-curses \
        --enable-readline \
        --without-bash-malloc \
        --with-installed-readline="${sysroot}${prefix}/lib"
}

build() {
    make -j${parallelism}
}

package() {
    make install DESTDIR="${dest_dir}"
    ln -s bash "${dest_dir}${prefix}"/bin/sh
    ln -s bash "${dest_dir}${prefix}"/bin/rbash

    mkdir -p "${dest_dir}"/etc
    cp -v "${base_dir}"/build-support/bash/bash.bashrc "${dest_dir}"/etc/
    cp -v "${base_dir}"/build-support/bash/bash.bash_logout "${dest_dir}"/etc/

    post_package_strip
}
